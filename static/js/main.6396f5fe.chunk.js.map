{"version":3,"sources":["actionConstants/socialActionConstants.js","actions/socialAction.js","components/extra/avatar_images.js","components/dataset.js","components/modals/trashModal.js","components/modals/fofFriends.js","components/modals/friendsModal.js","components/header.js","AppContainer.js","reducers/socialReducers.js","reducers/rootReducer.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["Actions","USERS_REQUESTED","USERS_RECEIVED","USERS_ERROR","USERS_COUNT_REQUESTED","USERS_COUNT_RECEIVED","USERS_COUNT_ERROR","SOME_USERS_REQUESTED","SOME_USERS_RECEIVED","SOME_USERS_ERROR","USERS_FRIENDS_REQUESTED","USERS_FRIENDS_RECEIVED","USERS_FRIENDS_ERROR","USER_FOFF_REQUESTED","USER_FOFF_RECEIVED","USER_FOFF_ERROR","base_url","getSomeUsers","page_number","dispatch","a","type","console","log","axios","get","response","payload","someUsers","data","users","error","getUserFriends","user_id","userFriends","getUserFofF","userFofF","AVATAR","violet","green","orange","yellow","red","blue","indigo","Dataset","state","show_trash_model","show_foff_model","show_friends_model","selected_user","handleDeleteRow","setState","setActionId","item","model_to_show","modalState","props","id","then","closeModal","model_to_close","this","isLoading","Loader","size","indeterminate","active","_","isEmpty","style","padding","backgroundColor","width","Modal","open","basic","Header","icon","content","Content","Button","color","inverted","onClick","Icon","name","reactState","display","scrolling","image","primary","Grid","map","index","Row","columns","divided","Column","Card","avatarImages","avatar","header","meta","email","description","userid","Description","fofFModal","friendshModal","Table","celled","selectable","Label","ribbon","HeaderCell","Body","as","Image","src","avatar_images","rounded","Subheader","Cell","className","textAlign","aria-hidden","class","Component","connect","socialReducers","MenuExampleSecondaryPointing","activeItem","handleItemClick","e","Segment","Menu","attached","pointing","secondary","stackable","borderColor","Item","position","AppContainer","activePage","offset","tcount","handlePaginationChange","totalUsersCount","count","height","overflow","Pagination","defaultActivePage","onPageChange","totalPages","React","initialState","userList","selecteduser","rootReducer","combineReducers","action","usersList","store","createStore","reducer","applyMiddleware","thunk","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6396f5fe.chunk.js","sourcesContent":["const USERS_REQUESTED = 'all/USERS_REQUESTED';\r\nconst USERS_RECEIVED = 'all/USERS_RECEIVED';\r\nconst USERS_ERROR = 'all/USERS_ERROR';\r\n\r\nconst USERS_COUNT_REQUESTED = 'all/COUNT_REQUESTED';\r\nconst USERS_COUNT_RECEIVED = 'all/USERS_COUNT_RECEIVED';\r\nconst USERS_COUNT_ERROR = 'all/USERS_COUNT_ERROR';\r\n\r\nconst SOME_USERS_REQUESTED = 'all/SOME_USERS_REQUESTED';\r\nconst SOME_USERS_RECEIVED = 'all/SOME_USERS_RECEIVED';\r\nconst SOME_USERS_ERROR = 'all/SOME_USERS_ERROR';\r\n\r\n\r\nconst USERS_FRIENDS_REQUESTED = 'all/USERS_FRIENDS_REQUESTED';\r\nconst USERS_FRIENDS_RECEIVED = 'all/USERS_FRIENDS_RECEIVED';\r\nconst USERS_FRIENDS_ERROR = 'all/USERS_FRIENDS_ERROR';\r\n\r\nconst USER_FOFF_REQUESTED = 'all/USERS_FOFF_REQUESTED';\r\nconst USER_FOFF_RECEIVED = 'all/USERS_FOFF_RECEIVED';\r\nconst USER_FOFF_ERROR = 'all/USERS_FOFF_ERROR';\r\n\r\n \r\n\r\n\t \r\n\r\nconst Actions = {\r\n    USERS_REQUESTED,\r\n    USERS_RECEIVED,\r\n    USERS_ERROR,\r\n    USERS_COUNT_REQUESTED,\r\n    USERS_COUNT_RECEIVED,\r\n    USERS_COUNT_ERROR,\r\n    SOME_USERS_REQUESTED,\r\n    SOME_USERS_RECEIVED,\r\n    SOME_USERS_ERROR,\r\n    USERS_FRIENDS_REQUESTED,\r\n    USERS_FRIENDS_RECEIVED,\r\n    USERS_FRIENDS_ERROR,\r\n    USER_FOFF_REQUESTED,\r\n    USER_FOFF_RECEIVED,\r\n    USER_FOFF_ERROR\r\n\r\n\r\n};\r\n\r\nexport default Actions;","import Actions from '../actionConstants/socialActionConstants';\r\nimport axios from 'axios';\r\n\r\n// const base_url = 'http://localhost:4000'\r\nconst base_url = 'https://codemymobile.herokuapp.com'\r\n\r\nexport const getusers = () => {\r\n  return async (dispatch) => {\r\n    dispatch({type: Actions.USERS_REQUESTED});\r\n\r\n    try {\r\n      let response = await axios.get(base_url+'/social/users');\r\n      // console.log(response.data.users)\r\n      dispatch({\r\n        type: Actions.USERS_RECEIVED,\r\n        payload: {usersList: response.data.users},\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Actions.USERS_ERROR,\r\n        error: \"API to get USERS list is failed with error : \"+e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const getUsersCount = () => {\r\n  return async (dispatch) => {\r\n    dispatch({type: Actions.USERS_COUNT_REQUESTED});\r\n    console.log(\"count api calling\")\r\n    try {\r\n      let response = await axios.get(base_url+'/social/users/pagecount');\r\n      // console.log(response.data)\r\n      dispatch({\r\n        type: Actions.USERS_COUNT_RECEIVED,\r\n        payload: {count: response.data.count},\r\n      });\r\n    } catch (e) {\r\n      console.log(e)\r\n      dispatch({\r\n        type: Actions.USERS_COUNT_ERROR,\r\n        error: \"API to get users count is failed with error : \"+e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getSomeUsers = (page_number) => {\r\n  return async (dispatch) => {\r\n    dispatch({type: Actions.SOME_USERS_REQUESTED});\r\n\r\n    console.log(\"some users calling\")\r\n\r\n    try {\r\n      let response = await axios.get(base_url+'/social/someusers/'+page_number);\r\n      // console.log(response)\r\n      dispatch({\r\n        type: Actions.SOME_USERS_RECEIVED,\r\n        payload: {someUsers: response.data.users},\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Actions.SOME_USERS_ERROR,\r\n        error: \"API to get some users  list is failed with error : \"+e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getUserFriends = (user_id) => {\r\n  return async (dispatch) => {\r\n    dispatch({type: Actions.USERS_FRIENDS_REQUESTED});\r\n\r\n    console.log(\"from socialAction\",user_id)\r\n\r\n    try {\r\n      let response = await axios.get(base_url+'/social/friends/'+user_id);\r\n      console.log(response)\r\n      dispatch({\r\n        type: Actions.USERS_FRIENDS_RECEIVED,\r\n        payload: {userFriends: response.data.users},\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Actions.USERS_FRIENDS_ERROR,\r\n        error: \"API to get some users  list is failed with error : \"+e,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const getUserFofF = (user_id) => {\r\n  return async (dispatch) => {\r\n    dispatch({type: Actions.USER_FOFF_REQUESTED});\r\n\r\n    console.log(\"from socialAction getUserFofF\",user_id)\r\n\r\n    try {\r\n      let response = await axios.get(base_url+'/social/foff/'+user_id);\r\n      console.log(response)\r\n      dispatch({\r\n        type: Actions.USER_FOFF_RECEIVED,\r\n        payload: {userFofF: response.data.users},\r\n      });\r\n    } catch (e) {\r\n      dispatch({\r\n        type: Actions.USER_FOFF_ERROR,\r\n        error: \"API to get FofF users  list is failed with error : \"+e,\r\n      });\r\n    }\r\n  };\r\n};","export default {\r\n    AVATAR: {\r\n        violet: 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/celebrities-cancer-1568667554.jpg?crop=0.490xw:0.981xh;0.502xw,0.00321xh&resize=640:*',\r\n        green: 'https://www.ksat.com/resizer/agaypUfE_0KZ4P6u65n4GAtcV10=/1280x720/smart/filters:format(jpeg):strip_exif(true):strip_icc(true):no_upscale(true):quality(65)/arc-anglerfish-arc2-prod-gmg.s3.amazonaws.com/public/5ZVSQ2KACJGKHLHVPG6I2CHC7E.jpg',\r\n        orange: 'https://ychef.files.bbci.co.uk/976x549/p08lr2pt.jpg',\r\n        yellow: 'https://bsmedia.business-standard.com/_media/bs/img/article/2019-05/24/full/1558706437-8205.jpg',\r\n        red: 'https://timesofindia.indiatimes.com/thumb/msid-79507665,width-800,height-600,resizemode-4/79507665.jpg?imglength=1589448',\r\n        blue: 'https://i2-prod.dailypost.co.uk/incoming/article18205703.ece/ALTERNATES/s1200b/2_Celebrities-Visit-Build-March-28-2019.jpg',\r\n        indigo: 'https://www.biography.com/.image/t_share/MTE5NDg0MDU0OTM2NTg1NzQz/tom-cruise-9262645-1-402.jpg'\r\n    }\r\n  };\r\n","import React, { Component } from 'react'\r\nimport { Pagination,Grid, Image, Loader, Table, Label,Modal,Button, Header,Icon} from 'semantic-ui-react'\r\nimport {getusers, getSomeUsers, getUserFriends, getUserFofF} from '../actions/socialAction'\r\nimport { trashModal } from './modals/trashModal'\r\nimport {friendshModal} from './modals/friendsModal'\r\nimport { fofFModal} from './modals/fofFriends'\r\nimport { connect } from 'react-redux';\r\nimport _, { truncate } from 'lodash'\r\nimport avatar_images from './extra/avatar_images'\r\nimport '../App.css'\r\n\r\nclass Dataset extends Component {\r\n    state = {\r\n \r\n        data:[],\r\n        page_number:1,\r\n        show_trash_model:false,\r\n        show_foff_model:false,\r\n        show_friends_model:false,\r\n        userFriends:[],\r\n        selected_user:'',\r\n        userFofF:[]\r\n      \r\n      }\r\n\r\n  handleDeleteRow = (user_id,page_number) => {\r\n    console.log(\"delete is clicked\",user_id)\r\n    console.log(\"page_number is clicked\",page_number)\r\n    this.setState({show_trash_model: false  })\r\n    // this.props.dispatch(deleteUser(user_id)).then(  ( ) =>  { this.props.dispatch(getSomeUsers(page_number)) ; }   );\r\n  }\r\n\r\n  setActionId = (item, model_to_show, modalState) => {\r\n    this.setState({ selected_user: item, [`${model_to_show}`]: modalState  })\r\n    if(model_to_show=='show_friends_model'){\r\n      console.log('clicked userfriends................')\r\n      this.props.dispatch(getUserFriends(item.id)).then(  ( ) =>  { \r\n        this.setState({ userFriends: this.props.userFriends}) \r\n      });\r\n    }\r\n\r\n    else if(model_to_show=='show_foff_model'){\r\n      console.log(\"from dispatch fofffriends............\",this.props.userFofF)\r\n      this.props.dispatch(getUserFofF(item.id)).then(  ( ) =>  { \r\n        this.setState({ userFofF: this.props.userFofF}) \r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  closeModal = (model_to_close) => {\r\n    this.setState({ [`${model_to_close}`]: false  })\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.dispatch(getSomeUsers(1));\r\n  }\r\n  \r\n  render() {\r\n    // console.log(\"from dataset\",this.state.tcount)\r\n    // const { someVehicleList} = this.props;\r\n    const { error, isLoading, someUsers, userFriends, page_number} = this.props;\r\n    \r\n    if (error) {\r\n        return <div> Error: {error} </div>;\r\n    } else if (isLoading) {\r\n        return <Loader size=\"large\" indeterminate active />\r\n      }\r\n    else{\r\n\r\n      if(_.isEmpty(this.props.someUsers)  )\r\n      return null;\r\n\r\n      return (\r\n        <div style = {{padding:'20px', backgroundColor:'white', width:'100%'}}>\r\n\r\n        <div>\r\n            {(() => {\r\n              if (this.state.show_trash_model) {\r\n                return (\r\n                  trashModal(this.closeModal, this.state, this.handleDeleteRow)\r\n                )\r\n              }   \r\n              else if (this.state.show_foff_model) {\r\n                return (\r\n                  fofFModal(this.closeModal, this.state)\r\n                )\r\n              } \r\n              else if (this.state.show_friends_model) {\r\n                return (\r\n                  friendshModal( this.closeModal, this.state)\r\n                )\r\n              } \r\n              else{\r\n                return null\r\n              }\r\n\r\n            })()}\r\n          </div>\r\n\r\n        <div  >\r\n            <Table celled   selectable   color='green'>\r\n                <Label color='green' ribbon>Social Users Table</Label>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>AVATAR</Table.HeaderCell>\r\n                        <Table.HeaderCell>ID</Table.HeaderCell>\r\n                        <Table.HeaderCell>USER ID</Table.HeaderCell>\r\n                        <Table.HeaderCell>USER NAME</Table.HeaderCell>\r\n                        <Table.HeaderCell>USER EMAIL</Table.HeaderCell>\r\n                        <Table.HeaderCell>USER FRIENDS</Table.HeaderCell>\r\n                        <Table.HeaderCell>FRIENDS OF FRIENDS</Table.HeaderCell>\r\n                        <Table.HeaderCell>REMOVE</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {someUsers.map( (item, index) => (\r\n                    <Table.Row>\r\n          <Header as='h4' image>\r\n            <Image src={avatar_images.AVATAR[item.avatar]} rounded size='mini' />\r\n            <Header.Content>\r\n              {item.name}\r\n              <Header.Subheader>Id: {item.id}</Header.Subheader>\r\n            </Header.Content>\r\n          </Header>\r\n                        <Table.Cell>{item.id}</Table.Cell>\r\n                        <Table.Cell>{item.userid}</Table.Cell>\r\n                        <Table.Cell>{item.name}</Table.Cell>\r\n                        <Table.Cell>{item.email}</Table.Cell>\r\n                        <Table.Cell className='action_items' textAlign=\"center\" selectable style={{color:'green'}} onClick={() => this.setActionId(item,'show_friends_model',true)}>\r\n                        <i aria-hidden=\"true\"  color='red' class=\"facebook f alternate icon\"></i>\r\n                        </Table.Cell>\r\n                        <Table.Cell className='action_items' textAlign=\"center\" selectable style={{color:'green'}} onClick={() => this.setActionId(item,'show_foff_model',true)}>\r\n                        <i aria-hidden=\"true\"  color='red' class=\"users alternate icon\"></i>\r\n                        </Table.Cell>  \r\n                        <Table.Cell className='action_items' textAlign=\"center\" selectable style={{color:'red'}} onClick={() => this.setActionId(item,'show_trash_model',true)}>\r\n                        <i aria-hidden=\"true\"  color='red' class=\"trash alternate icon\"></i>\r\n                        </Table.Cell>\r\n                    </Table.Row>\r\n                    ))}\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  // if(!_.isEmpty(state.socialReducers.userFofF))\r\n      // console.log(\"from dataset..............\",state.socialReducers.userFofF)\r\n  return {\r\n    someUsers: state.socialReducers.someUsers,\r\n    error:  state.socialReducers.error,\r\n    isLoading: state.socialReducers.isLoading,\r\n    userFriends: state.socialReducers.userFriends,\r\n    userFofF: state.socialReducers.userFofF\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dataset);\r\n\r\n","import { Pagination,Grid, Loader, Table, Label,Modal,Button, Header,Icon} from 'semantic-ui-react'\r\n\r\nexport const trashModal = (closeModal, reactState, handleDeleteRow) => {\r\n    const model_ui =   <Modal  open={true} basic size='small'>\r\n        \r\n    <Header icon='archive' content='Archive user' />\r\n    <Modal.Content>\r\n      <p>\r\n        {/* Are you sure you want to unlist this item ? */}\r\n        This feature is not implemented yet\r\n      </p>\r\n    </Modal.Content>\r\n    <Modal.Actions>\r\n      {/* <Button basic color='red' inverted  onClick={() => closeModal('show_trash_model')}>\r\n        <Icon name='remove' /> No\r\n      </Button> */}\r\n      <Button basic color='red' inverted  onClick={() => closeModal('show_trash_model')}>\r\n        <Icon name='remove' /> This feature is not implemented yet, please close\r\n      </Button>\r\n      {/* <Button color='green' inverted onClick={() => handleDeleteRow(reactState.selected_user.id,reactState.page_number)} >\r\n        <Icon name='checkmark' /> Yes\r\n      </Button> */}\r\n    </Modal.Actions>\r\n  </Modal>\r\n    return model_ui\r\n}","import { Pagination,Grid, Loader, Table,Card, Image, Label,Modal,Button, Header,Icon} from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport avatarImages from '../extra/avatar_images'\r\n\r\nimport React from 'react'\r\nexport const fofFModal = ( closeModal, reactState) => {\r\n  // const [open, setOpen] = React.useState(false)\r\n  if(_.isEmpty(reactState.userFofF)){\r\n    \r\n  return (\r\n    <Modal open={true} >\r\n       <Modal.Header>No friends of friends found of <p style={{ display: 'inline', color:'blue' }}>{reactState.selected_user.name}.</p> </Modal.Header>\r\n       <Modal.Content  scrolling image></Modal.Content>\r\n       <Modal.Actions>\r\n        <Button onClick={() => closeModal('show_foff_model')} primary>\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )}\r\n  else{\r\n  return (\r\n    <Modal open={reactState.show_foff_model}  >\r\n      <Modal.Header>Friends of Friends List of <p style={{ display: 'inline', color:'blue' }}>{reactState.selected_user.name}.</p> </Modal.Header>\r\n      <Modal.Content  scrolling image>\r\n        <Grid>\r\n      {reactState.userFofF.map( (item, index) => (\r\n        \r\n    <Grid.Row columns={2} divided>\r\n      <Grid.Column> \r\n                  <Card\r\n                  image= {avatarImages.AVATAR[item.avatar]}\r\n                  header={item.name}\r\n                  meta={\"Email : \"+item.email}\r\n                  description={\"UserId : \"+item.userid}\r\n                />\r\n           </Grid.Column>\r\n           <Grid.Column>\r\n      <Modal.Description style={{padding:\"10px\"}}>\r\n        <strong > This is description of <p style={{ display: 'inline', color:'blue' }}>{item.name}.</p>  Here we can describe everything about a friend. </strong>\r\n\r\n        <p> “You must not lose faith in humanity. Humanity is an ocean; if a few drops of the ocean are dirty, \r\n          the ocean does not become dirty.” – Mahatma Gandhi\r\n          “To deny people their human rights is to challenge their very humanity.” – Nelson Mandela \r\n          “Love and compassion are necessities, not luxuries. Without them, humanity cannot survive.” \r\n          “The sole meaning of life is to serve humanity.” – Leo Tolstoy </p>\r\n      </Modal.Description> \r\n      </Grid.Column>\r\n\r\n      </Grid.Row>\r\n))}\r\n</Grid>\r\n    </Modal.Content>\r\n         \r\n      <Modal.Actions>\r\n        <Button onClick={() => closeModal('show_foff_model')} primary>\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )}\r\n}\r\n\r\n","import React from 'react'\r\nimport { Pagination,Grid, Loader, Table,Card, Image, Label,Modal,Button, Header,Icon} from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport avatarImages from '../extra/avatar_images'\r\n\r\n\r\nexport const friendshModal = ( closeModal, reactState) => {\r\n  // const [open, setOpen] = React.useState(false)\r\n  if(_.isEmpty(reactState.userFriends)){\r\n  return (\r\n    <Modal open={true} >\r\n       <Modal.Header>No friends found of <p style={{ display: 'inline', color:'blue' }}>{reactState.selected_user.name}.</p> </Modal.Header>\r\n       <Modal.Content  scrolling image></Modal.Content>\r\n       <Modal.Actions>\r\n        <Button onClick={() => closeModal('show_friends_model')} primary>\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )}\r\n  else{\r\n  return (\r\n    <Modal  open={reactState.show_friends_model}   >\r\n      <Modal.Header>Friends List of <p style={{ display: 'inline', color:'blue' }}>{reactState.selected_user.name}.</p> </Modal.Header>\r\n      <Modal.Content  scrolling image>\r\n        <Grid>\r\n      {reactState.userFriends.map( (item, index) => (\r\n        \r\n    <Grid.Row columns={2} divided>\r\n      <Grid.Column> \r\n                  <Card\r\n                  image= {avatarImages.AVATAR[item.avatar]}\r\n                  header={item.name}\r\n                  meta={\"Email : \"+item.email}\r\n                  description={\"UserId : \"+item.userid}\r\n                />\r\n           </Grid.Column>\r\n           <Grid.Column>\r\n      <Modal.Description style={{padding:\"10px\"}}>\r\n        <strong > This is description of <p style={{ display: 'inline', color:'blue' }}>{item.name}.</p>  Here we can describe everything about a friend. </strong>\r\n\r\n        <p> “You must not lose faith in humanity. Humanity is an ocean; if a few drops of the ocean are dirty, \r\n          the ocean does not become dirty.” – Mahatma Gandhi\r\n          “To deny people their human rights is to challenge their very humanity.” – Nelson Mandela \r\n          “Love and compassion are necessities, not luxuries. Without them, humanity cannot survive.” \r\n          “The sole meaning of life is to serve humanity.” – Leo Tolstoy </p>\r\n      </Modal.Description> \r\n      </Grid.Column>\r\n\r\n      </Grid.Row>\r\n))}\r\n</Grid>\r\n    </Modal.Content>\r\n         \r\n      <Modal.Actions>\r\n        <Button onClick={() => closeModal('show_friends_model')} primary>\r\n          Close\r\n        </Button>\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )}\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Menu, Segment } from 'semantic-ui-react'\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nexport default class MenuExampleSecondaryPointing extends Component {\r\n  state = { activeItem: 'home' }\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n\r\n  render() {\r\n    const { activeItem } = this.state\r\n\r\n    return (\r\n      <Segment style={{backgroundColor : 'green'}}>\r\n      {/* <Segment style={{backgroundColor : '#0a3438'}}> */}\r\n        <Menu attached pointing secondary stackable inverted style={{borderColor:'transparent'}}>\r\n          <Menu.Item\r\n            name='home'\r\n            active={activeItem === 'home'}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name='Scoial Friends'\r\n            active={activeItem === 'Scoial Friends'}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name='friends of friends'\r\n            active={activeItem === 'friends of friends'}\r\n            onClick={this.handleItemClick}\r\n          />\r\n          <Menu.Menu position='right'>\r\n            <Menu.Item\r\n              name='feature'\r\n              active={activeItem === 'feature'}\r\n              onClick={this.handleItemClick}\r\n            />\r\n          </Menu.Menu>\r\n        </Menu>\r\n\r\n \r\n      </Segment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Loader,Grid, Pagination} from 'semantic-ui-react';\r\nimport {  getUsersCount, getSomeUsers} from './actions/socialAction';\r\nimport Dataset from './components/dataset'\r\nimport Header from './components/header'\r\nimport { connect } from 'react-redux';\r\nimport './App.css'\r\nimport _ from 'lodash'\r\n\r\nclass AppContainer extends React.Component {\r\n  state = {\r\n    activePage: 1,\r\n    data:[],\r\n    offset: 5,\r\n    tcount: 10\r\n  }\r\n  \r\n  componentDidMount() {\r\n \r\n    if(_.isEmpty(this.props.totalUsersCount)  )\r\n      this.props.dispatch(getUsersCount());\r\n  }\r\n\r\n  handlePaginationChange = (e, { activePage }) => {\r\n \r\n    this.props.dispatch(getSomeUsers(activePage));\r\n\r\n}\r\n  render() {\r\n\r\n    const { error, isLoading, totalUsersCount} = this.props;\r\n    \r\n    if (error) {\r\n        return <div> Error: {error} </div>;\r\n    } else if (isLoading) {\r\n        return <Loader size=\"large\" indeterminate active />\r\n      }\r\n    else {\r\n\r\n      if(_.isEmpty(this.props.totalUsersCount)  )\r\n        return null;\r\n  \r\n      return (\r\n          \r\n        <Grid celled='internally'>\r\n\r\n            <Grid.Row>\r\n              <Header/>\r\n            </Grid.Row>\r\n\r\n            <Grid.Row style={{ height : '80vh' , overflow: 'auto'}} >\r\n               \r\n                  <Dataset page_number={this.state.activePage} />\r\n               \r\n            </Grid.Row>\r\n            \r\n            <Grid.Row>\r\n              <Pagination inverted\r\n                        // activePage = {this.state.activePage}\r\n                        defaultActivePage = \"1\"\r\n                        onPageChange = {this.handlePaginationChange}\r\n                        totalPages= {this.props.totalUsersCount/10}\r\n                        // totalPages= {12}\r\n                      />\r\n            </Grid.Row>\r\n \r\n          </Grid>\r\n      )\r\n    }\r\n  }\r\n}\r\nconst mapStateToProps = (state, props) => {\r\n  console.log(\"from appcontainer.....................\",state.socialReducers.totalUsersCount)\r\n  return {\r\n    totalUsersCount: state.socialReducers.totalUsersCount,\r\n    error:  state.socialReducers.error,\r\n    isLoading: false\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(AppContainer);","import Actions from  '../actionConstants/socialActionConstants'\r\n\r\nconst initialState = {\r\n  userList: [],\r\n  isLoading: false,\r\n  selecteduser: {},\r\n  totalUsersCount: '',\r\n  someUsers: [],\r\n  userFriends: [],\r\n  userFofF: [],\r\n  error: '',\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\nswitch (action.type) {\r\ncase Actions.USERS_REQUESTED:\r\n  return {\r\n    ...state,\r\n    error: '',\r\n    userList: [],\r\n    isLoading: true,\r\n  };\r\n  case Actions.USERS_RECEIVED:\r\n  return {\r\n    ...state,\r\n    error: '',\r\n    userList: action.payload.usersList || [],\r\n    // selecteduser: action.payload.usersList[0] || {},\r\n    isLoading: false,\r\n  };\r\n  case Actions.USERS_ERROR:\r\n  return {\r\n    ...state,\r\n    error: action.error || 'Something went wrong while fetching user list',\r\n    isLoading: false,\r\n  };\r\n\r\n  case Actions.USERS_COUNT_REQUESTED:\r\n    return {\r\n      ...state,\r\n      error: action.error || '',\r\n      totalUsersCount:   '',\r\n      isLoading: true,\r\n    };\r\n    case Actions.USERS_COUNT_RECEIVED:\r\n    return {\r\n      ...state,\r\n      error:  '',\r\n      totalUsersCount: action.payload.count || '',\r\n      isLoading: false,\r\n    };\r\n    case Actions.USERS_COUNT_ERROR:\r\n    return {\r\n      ...state,\r\n      error: action.error || 'Something went wrong while fetching users counts',\r\n      isLoading: false,\r\n    };\r\n\r\n    case Actions.SOME_USERS_REQUESTED:\r\n      return {\r\n        ...state,\r\n        error: action.error || '',\r\n        someUsers:   {},\r\n        isLoading: false,\r\n      };\r\n      case Actions.SOME_USERS_RECEIVED:\r\n      return {\r\n        ...state,\r\n        error:  '',\r\n        someUsers: action.payload.someUsers || {},\r\n        isLoading: false,\r\n      };\r\n      case Actions.SOME_USERS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error || 'Something went wrong while fetching some users ',\r\n        isLoading: false,\r\n      };\r\n\r\n\r\n      case Actions.USERS_FRIENDS_REQUESTED:\r\n        return {\r\n          ...state,\r\n          error: action.error || '',\r\n          userFriends:   {},\r\n          isLoading: false,\r\n        };\r\n        case Actions.USERS_FRIENDS_RECEIVED:\r\n        return {\r\n          ...state,\r\n          error:  '',\r\n          userFriends: action.payload.userFriends || {},\r\n          isLoading: false,\r\n        };\r\n        case Actions.USERS_FRIENDS_ERROR:\r\n        return {\r\n          ...state,\r\n          error: action.error || 'Something went wrong while fetching some users ',\r\n          isLoading: false,\r\n        };\r\n\r\n      \r\n\r\n        case Actions.USER_FOFF_REQUESTED:\r\n          return {\r\n            ...state,\r\n            error: action.error || '',\r\n            userFofF:   {},\r\n            isLoading: false,\r\n          };\r\n          case Actions.USER_FOFF_RECEIVED:\r\n          return {\r\n            ...state,\r\n            error:  '',\r\n            userFofF: action.payload.userFofF || {},\r\n            isLoading: false,\r\n          };\r\n          case Actions.USER_FOFF_ERROR:\r\n          return {\r\n            ...state,\r\n            error: action.error || 'Something went wrong while fetching FofF ',\r\n            isLoading: false,\r\n          };\r\n\r\n\r\ndefault:\r\n  return state;\r\n}\r\n};","import { combineReducers } from 'redux';\r\nimport socialReducers from './socialReducers';\r\n \r\n\r\nconst rootReducer = combineReducers({\r\n    socialReducers: socialReducers\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore,applyMiddleware  } from 'redux';\r\nimport reducer from './reducers/rootReducer'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport AppContainer from './AppContainer'\nimport { Provider } from 'react-redux';\n \nimport store from './store'\n\nclass App extends React.Component {\n  render() {\n  return(\n    <Provider store={store}>\n     <AppContainer/>\n    </Provider>\n  ) \n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}